#!/usr/bin/perl

#
# GLOBALS AND PRAGMAS
#
use strict;
use Cwd;
$| = 1;
my %vmhash;
my $sdir = getcwd;

#
# SUBROUTINE DEFINITIONS
#
sub ClobberVM {
  my ($id, $path) = @_;
  chdir("$path") or die "$!";
  print "Operating in dir: " . getcwd . "\n";

  open(COMF, "vagrant destroy -f 2>&1|") 
    or die "Opening pipe to vagrant command failed: $!";

  if ($? != 0) {
    print "Error when opening pipe: $!\n";
    print "\nMoving on...\n";
    close(COMF);
    return;
  }
  print "Reading from PIPE....\n";
  PIPE: while (my $line = <COMF>) {
    chomp($line);
    print "PIPE: " . $line . "\n";
    if ($line =~ /^Your UID is: (\d+)/) {
      my $uid = $1;
      close(COMF);
      print "\nWRONG USER!  Enforing uid = $uid\n";
      unlink("./.vagrant/machines/default/virtualbox/creator_uid");
      open(OUTF, ">./.vagrant/machines/default/virtualbox/creator_uid")
        or die "Opening the creator_uid file failed: $!";
      print OUTF $uid;
      close(OUTF);
      print "\ncontrol file modified!\n\nRe-running the destroy...\n";
      system("vagrant destroy -f");
      last PIPE;
    } elsif ($line =~ /^A Vagrant environment or target machine/) {
        print "FATAL: no Vagrantfile found....moving on to next target...\n";
        last PIPE;
    }
  }
}

#
# ELABORATION
#
print "Global VM Killer: This tools clears ALL VMs from a system\n";
my @buff = `vagrant global-status`;
print @buff;
chomp(@buff);
print "\nprocessing...\n";
for (my $pos = 2; $pos < $#buff; ++$pos) {
  last if $buff[$pos] =~ /^\s*$/;
  chomp($buff[$pos]);
  if ($buff[$pos] =~ /^There are no/) {
    print "NO VMS FOUND\n";
    last;
  }

  my ($id, $path) = ( $buff[$pos] =~ /^([A-Za-z0-9]+)(?:(?:\s+\S+){3} +)(.*)$/ );
  $path =~ s/^(.*?)\s*$/\1/;

  ClobberVM($id, $path);
}
__END__
